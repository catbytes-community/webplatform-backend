// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table applications {
  id integer [primary key]
  name varchar [not null]
  about text [not null]
  email email [unique, not null]
  video_link varchar
  discord_nickname varchar [unique, not null]
  created_at timestamp
  status enum 
  comment varchar
  last_modified_by integer [ref: > users.id]
  last_modified_at timestamp
}

Table users {
  id integer [primary key]
  name varchar [not null]
  email email [unique, not null]
  about text
  img_link varchar 
  discord_nickname varchar [unique, not null]
  languages text[]
  created_at timestamp
} // roles are created dynamically from related table

Table roles {
  id integer [primary key]
  name varchar
  privileged bool
}

Table user_roles {
  role_id integrer [primary key]
  user_id integer [primary key]
}

Table mentors {
  id integer [primary key]
  user_id integer [ref: - users.id]
  contact varchar
  about text
  status enum
  created_at timestamp
} // tags are created dynamically from related table

Table projects {
  id integer [primary key]
  created_by integer [ref: > users.id]
  created_at timestamp
  title varchar
  description text
  description_short text
  status enum
  duration varchar
  period varchar
  img_link varchar
} // tags, links are created dynamically from related tables

Table users_projects {
  user_id integer [primary key]
  project_id integer [primary key]
  joined_at timestamp
}

Table project_positions {
  id integer [primary key]
  project_id integer [ref: > projects.id]
  title varchar
  level varchar
  description text
  is_open boolean
}

Table project_applications {
  id integer [primary key] 
  position_id integer [ref: > project_positions.id]
  user_id integer [ref: > users.id]
  description text
  file_link varchar
  status enum 
  comment varchar
  last_modified_by integer [ref: > users.id]
  last_modified_at timestamp
}


Table study_buddy {
  id integer [primary key]
  created_by integer [ref: > users.id]
  created_at timestamp
  title varchar
  description text
  url varchar
  type enum [note: 'buddy, group']
  tags text[]
  status enum
}

Table users_learnings {
  user_id integer [primary key]
  learning_entity_id integer [primary key]
  joined_at timestamp
}

Table tags {
  id integer [primary key]
  name varchar
  type enum
}

Table tags_assigned {
  tag_id integer [primary key]
  assigned_id integer [primary key]
  assigned_to enum [note: 'mentor, project, study_buddy']
}

Table links {
  id integer [primary key]
  url varchar
  description varchar
  entity_type enum [note: 'project, study_buddy, resource...']
  entity_id integer
}




//Ref: applications.last_modified_by > users.id // many-to-one
Ref: users.id <> user_roles.user_id // many-to-many
Ref: roles.id <> user_roles.role_id
//Ref: users.id - mentors.user_id // one-to-one
Ref: mentors.id <> tags_assigned.assigned_id
Ref: projects.id <> tags_assigned.assigned_id
Ref: study_buddy.id <> tags_assigned.assigned_id
Ref: tags.id <> tags_assigned.tag_id
//Ref: users.id > projects.created_by 
//Ref: users.id > study_buddy.created_by 
Ref: users.id <> users_projects.user_id
Ref: projects.id <> users_projects.project_id

Ref: users.id <> users_learnings.user_id
Ref: study_buddy.id <> users_learnings.learning_entity_id

// links relationships: other resources to be added
Ref: links.entity_id > projects.id