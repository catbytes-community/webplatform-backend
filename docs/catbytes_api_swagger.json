{
  "openapi": "3.0.3",
  "info": {
    "title": "CatBytes Web Platform",
    "description": "This is CatBytes Web Platform API specification.\n\n!\nPlease note, this is an initial draft of the API, all payloads and response bodies are very likely to change.\n\nEndpoints marked with ✅ emoji are already implemented and live and  their specifications are up-to-date.\n\nSome useful links:\n- [CatBytes backend repository](https://github.com/catbytes-community/webplatform-backend)\n- [CatBytes API server](http://18.212.59.47/)",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://somepath.catbytes.io/api/v1"
    }
  ],
  "tags": [
    {
      "name": "applications",
      "description": "New users applications"
    },
    {
      "name": "roles",
      "description": "Available roles"
    },
    {
      "name": "users",
      "description": "User related operations"
    },
    {
      "name": "mentors",
      "description": "Mentor related operations"
    }
  ],
  "paths": {
    "/applications": {
      "post": {
        "tags": [
          "applications"
        ],
        "summary": "✅ Create new user application",
        "description": "Send new user application's data for review.",
        "operationId": "createApplication",
        "requestBody": {
          "description": "Data user inserted on application",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Jane Doe"
                  },
                  "about": {
                    "type": "string",
                    "example": "I'm passionate about C++ programming"
                  },
                  "email": {
                    "type": "string",
                    "example": "jane@example.com"
                  },
                  "video_link": {
                    "type": "string",
                    "example": "http://example.com/video/1"
                  },
                  "discord_nickname": {
                    "type": "string",
                    "example": "sample_username"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "id": 42,
                    "name": "Jane Doe",
                    "about": "I'm passionate about C++ programming",
                    "email": "jane@example.com",
                    "video_link": "http://example.com/video/1",
                    "discord_nickname": "sample_username"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "null value in column \"discord_nickname\" of relation \"applications\" violates not-null constraint"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Application with this email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Application with this email already exists"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "✅ Get all (active?) applications",
        "description": "",
        "operationId": "getApplications",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "example": [
                          {
                            "id": 5,
                            "name": "jane doe",
                            "about": "im cool",
                            "video_link": "http://example.com/video/1",
                            "discord_username": "sample_username",
                            "created_at": "2024-11-23T16:37:04.115Z",
                            "email": "jane@example.com"
                          },
                          {
                            "id": 6,
                            "name": "nina",
                            "about": "i like cats",
                            "video_link": "http://example.com/video/2",
                            "discord_username": "nina_disc",
                            "created_at": "2024-11-20T16:37:04.115Z",
                            "email": "nina@example.com"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User is not allowed to view applications list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "You're not allowed to access this resource"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Get application by id",
        "description": "",
        "operationId": "getApplicationById",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "example": "Mary Roe"
                    },
                    "description": {
                      "type": "string",
                      "example": "I love frontend"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid application id supplied"
          },
          "403": {
            "description": "User is not allowed to view applications"
          },
          "404": {
            "description": "Application not found"
          }
        }
      },
      "post": {
        "tags": [
          "applications"
        ],
        "summary": "Perform action on application",
        "description": "This endpoint is used to either approve or deny an application. (We're going to provide a (enum) list of actions available)",
        "operationId": "editApplication",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Action with comment (the comment is stored in database along with closed application, no matter what the action was)",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "example": "deny"
                  },
                  "comment": {
                    "type": "string",
                    "example": "seems to be phishing"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Unknown action"
          },
          "403": {
            "description": "User is not allowed to edit applications"
          },
          "404": {
            "description": "Application not found"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "✅  Get all available server roles",
        "description": "",
        "operationId": "getRoles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "roles": {
                      "type": "object",
                      "example": [
                        {
                          "id": 1,
                          "role_name": "member",
                          "is_privileged": false
                        },
                        {
                          "id": 2,
                          "role_name": "mentor",
                          "is_privileged": true
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "✅ Create user",
        "description": "First time authenticated user creation.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Data user inserted on registration",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Jane Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "jane@example.com"
                  },
                  "about": {
                    "type": "string",
                    "example": "Hello i am Jane"
                  },
                  "languages": {
                    "type": "object",
                    "example": [
                      "English",
                      "Russian"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 42
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User with this email is already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User with this email is already registered"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "✅ Get all users - general information",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "object",
                      "example": [
                        {
                          "id": 1,
                          "name": "Jane",
                          "languages": [
                            "English",
                            "Spanish"
                          ]
                        },
                        {
                          "id": 2,
                          "name": "Nina",
                          "languages": [
                            "English",
                            "Russian"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "✅ Get user by user id",
        "description": "",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The id of user that needs to be fetched. Use 42 for testing. ",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 42
                    },
                    "name": {
                      "type": "string",
                      "example": "Jane"
                    },
                    "email": {
                      "type": "string",
                      "example": "jane@example.com"
                    },
                    "about": {
                      "type": "string",
                      "example": "Hi iam Jane"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2024-11-23T17:27:56.146Z"
                    },
                    "languages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "English",
                        "Spanish"
                      ]
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "mentee"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user id supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid user id supplied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "✅  Update user",
        "description": "This can only be done by the logged in user. Any changes that are performed in user profile come here.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "id of user that need to be updated",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New Name"
                  },
                  "about": {
                    "type": "string",
                    "example": "New Description"
                  },
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "English",
                      "Spanish",
                      "Added Language"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 42
                    },
                    "name": {
                      "type": "string",
                      "example": "New Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "jane@example.com"
                    },
                    "about": {
                      "type": "string",
                      "example": "New Description"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2024-11-23T17:27:56.146Z"
                    },
                    "languages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "English",
                        "Spanish",
                        "Added Language"
                      ]
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "mentee"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user id supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid user id supplied"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You don't have the rights to edit this user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "You're not allowed to edit this resource"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "✅   Delete user by id",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The id of user that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 42
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user_id supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid user id supplied"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You don't have the rights to edit this user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "You're not allowed to edit this resource"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mentor": {
      "post": {
        "tags": [
          "mentors"
        ],
        "summary": "Create mentor - in request state",
        "description": "Creates new mentor entity and puts in 'in-review' state",
        "operationId": "createMentor",
        "requestBody": {
          "description": "Data user inserted on registration",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Jane Doe"
                  },
                  "experience": {
                    "type": "string",
                    "example": "I'm working with 3D for 3 years already"
                  },
                  "contact_info": {
                    "type": "string",
                    "example": "janedoe in discord"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 42
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "mentors"
        ],
        "summary": "Get mentors - filtered",
        "description": "This endpoint is used for displaying both active and in-review mentors",
        "operationId": "getMentors",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The type of mentor entities to fetch. **active** OR **inreview**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "mentor_id": 1,
                          "name": "Jane Doe",
                          "description": "I'm working with 3D for 3 years already"
                        },
                        {
                          "mentor_id": 2,
                          "name": "Mary Roe",
                          "description": "I love frontend"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameter"
          },
          "403": {
            "description": "User is not allowed to view mentors list (might happen for GET mentors under review)"
          }
        }
      }
    },
    "/mentor/{mentor_id}": {
      "get": {
        "tags": [
          "mentors"
        ],
        "summary": "Get mentor by id",
        "description": "",
        "operationId": "getMentorById",
        "parameters": [
          {
            "name": "mentor_id",
            "in": "path",
            "description": "The id of mentor that needs to be fetched. Use 42 for testing. ",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 42
                    },
                    "name": {
                      "type": "string",
                      "example": "Jane Doe"
                    },
                    "contact": {
                      "type": "string",
                      "example": "janedoe in discord"
                    },
                    "experience": {
                      "type": "string",
                      "example": "I have an extended IT experience"
                    },
                    "about": {
                      "type": "string",
                      "example": "I can help with ..."
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "nodejs",
                        "fullstack"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid mentor id supplied"
          },
          "404": {
            "description": "Mentor not found"
          }
        }
      },
      "put": {
        "tags": [
          "mentors"
        ],
        "summary": "Update mentor",
        "description": "This can only be done by the logged in user with mentor role. Any changes that are performed in mentor's card come here.",
        "operationId": "updateMentor",
        "parameters": [
          {
            "name": "mentor_id",
            "in": "path",
            "description": "id of mentor that need to be updated",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existing mentor info",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "experience": {
                    "type": "string",
                    "example": "I have a very extended IT experience"
                  },
                  "about": {
                    "type": "string",
                    "example": "I can pass my experience to you"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid mentor id supplied"
          },
          "403": {
            "description": "You don't have the rights to edit this mentor"
          },
          "404": {
            "description": "Mentor not found"
          }
        }
      },
      "post": {
        "tags": [
          "mentors"
        ],
        "summary": "Update mentor status",
        "description": "This can only be done by the logged in user with moderator role. This endpoint is used to change state (for now) of mentor entity",
        "operationId": "changeMentor",
        "parameters": [
          {
            "name": "mentor_id",
            "in": "path",
            "description": "id of mentor that need to be changed",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existing mentor entity status (enum(\"active\", \\\"inactive\", \\\"blocked\"))",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid mentor id or status supplied"
          },
          "403": {
            "description": "You don't have the rights to edit this mentor"
          },
          "404": {
            "description": "Mentor not found"
          }
        }
      },
      "delete": {
        "tags": [
          "mentors"
        ],
        "summary": "Delete mentor entity",
        "description": "This can only be done by the logged in user with moderator or mentor role.",
        "operationId": "deleteMentor",
        "parameters": [
          {
            "name": "mentor_id",
            "in": "path",
            "description": "The id of mentor that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid mentor_id supplied"
          },
          "403": {
            "description": "You don't have the rights to edit this mentor"
          },
          "404": {
            "description": "Mentor not found"
          }
        }
      }
    }
  }
}